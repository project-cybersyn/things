-- Public types and enums for the Things API.

--------------------------------------------------------------------------------
-- GENERAL DATA TYPES USED BY REMOTE INTERFACES
--------------------------------------------------------------------------------

---Error generated by the Things API.
---@class (exact) things.Error
---@field public code string Machine-readable error code.
---@field public message LocalisedString Human-readable error message.

---Unique identifier for a Thing.
---@alias things.Id int64

---Thing identifier consumed by the Things API.
---Either the id of a Thing, or the LuaEntity currently representing it.
---@alias things.ThingIdentification things.Id|LuaEntity

---General statuses of a Thing.
---`void` means the Thing has no entity. Different from `destroyed` in that it will not be garbage collected and may later be re-attached to an entity.
---`real` means the Thing has a valid real entity.
---`ghost` means the Thing has a valid ghost entity.
---`destroyed` means the Thing is irrevocably gone. Destroyed things will be garbage-collected and cannot be used for any purpose.
---@alias things.Status "void"|"real"|"ghost"|"destroyed"

---Registration options for a type of Thing.
---@class (exact) things.ThingRegistration
---@field public name string Name of the registered Thing type. This should generally match the prototype name of the entity used by this Thing type, but it does not have to.
---@field public virtualize_orientation? boolean If true, the orientation of the Thing will be stored and managed by Things instead of relying on Factorio's built-in entity orientation. This allows for more complex orientation scenarios involving compound entities. (default: false)
---@field public merge_tags_on_overlap? boolean If true, when a Thing is overlapped by a blueprinted thing with tags, the tags will be shallow-merged instead of replaced. (default: false)
---@field public custom_events? {[things.EventName]: string} Mapping of Things event names to `CustomEventPrototype` names to raise for this Thing type. If not provided, no custom events will be raised for this Thing type.

---Registration options for a graph of Things.
---@class (exact) things.GraphRegistration
---@field public directed? boolean Whether the graph is directed (default: false).

---Representation of an edge in a graph of Things.
---@class things.GraphEdge
---@field public first int First Thing ID connected to this edge. (In undirected graphs, the lower id.)
---@field public second int Second Thing ID connected to this edge.
---@field public data? Tags Optional user data associated with this edge.

---@class things.NamedGraphEdge: things.GraphEdge
---@field public name string The name of the graph this edge belongs to.

---A set of graph names.
---@alias things.GraphSet {[string]: true}

---Info about a Thing's relationship to its parent.
---[1]: The ID of the parent Thing.
---[2]: The key under which this Thing is registered in its parent's children.
---[3]: The position of this Thing relative to its parent, if any.
---[4]: The orientation of this Thing relative to its parent, if any.
---@alias things.ParentRelationshipInfo [int64, string|int, MapPosition?, Core.Dihedral?]

---A summary of a Thing's children, indexed by child key.
---@alias things.ThingChildrenSummary {[string|int]: things.ThingSummary}

---Serializable summary information about a Thing.
---@class (exact) things.ThingSummary
---@field public id things.Id The id of the Thing.
---@field public name string The name of the Thing's registration.
---@field public entity LuaEntity? The current entity of the Thing, if it has one.
---@field public status things.Status The current status of the Thing.
---@field public virtual_orientation Core.Orientation? The current virtual orientation of the Thing, if it has one. This will always be nil for Thing types that do not virtualize orientation.
---@field public tags Tags? The current tags of the Thing.
---@field public parent? things.ParentRelationshipInfo Information about this Thing's parent, if any.

---Options controlling how a Thing is created via `create_thing`.
---@class (exact) things.CreateThingParams
---@field public name? string If given, the new Thing will be created as an instance of the registered Thing type with this name. If not given, name will be inferred from the entity type.
---@field public parent? things.ThingIdentification If given, create the new Thing as a child of this Thing.
---@field public index_in_parent? string|int If `parent` is given, the new Thing will be registered in the parent's children under this index. This field is ignored if `parent` is not given, and will not change child keys of existing Things.
---@field public devoid? things.ThingIdentification If given, instead of creating a new Thing, devoid the given voided Thing. Cannot be given with `parent`; the new Thing will retain the parent of the devoided Thing.
---@field public relative_offset? MapPosition If given, and the associated Thing has a parent, the position of the new Thing will be recomputed using the given offset within the parent's local coordinate space. If the Thing has no parent, this field is ignored.
---@field public relative_orientation? Core.Dihedral If given, and the associated Thing has a parent, the orientation of the new Thing will be computed by applying this relative orientation to the parent's orientation. If the Thing has no parent, this field is ignored.

---Entity within a blueprint being extracted.
---@class (exact) things.ExtractedEntity
---@field public index int The index of the entity within the extraction process.
---@field public bp_entity BlueprintEntity The blueprint entity data.
---@field public entity LuaEntity The in-world entity this blueprint entity represents.
---@field public thing_id things.Id? The Thing this blueprint entity represents.
---@field public deleted true? If `true`, this entity was deleted by an atomic blueprint operation.

--------------------------------------------------------------------------------
-- EVENT DATA TYPES
--------------------------------------------------------------------------------

---Thing event names that can be rebroadcasted as Factorio custom events.
---@alias things.EventName "on_initialized"|"on_status"|"on_tags_changed"|"on_edges_changed"|"on_orientation_changed"|"on_children_changed"|"on_parent_changed"|"on_child_status"|"on_parent_status"

---Event fired when a Thing with a new ID is generated in the world.
---Does not apply to undo, revival, etc of pre-existing Things.
---@alias things.EventData.on_initialized things.ThingSummary

---@class (exact) things.EventData.on_status
---@field public thing things.ThingSummary Summary of the Thing whose status changed.
---@field public old_status things.Status The previous status of the Thing.
---@field public new_status things.Status The new status of the Thing.

---Event parameters for when Thing tags change. Note that for performance
---reasons, Things does not deep compare tags, so this event may be raised
---in certain cases even when tags haven't meaningfully changed.
---@class (exact) things.EventData.on_tags_changed
---@field public thing things.ThingSummary Summary of the Thing whose tags changed.
---@field public new_tags Tags The new tags of the Thing.
---@field public old_tags Tags The previous tags of the Thing.

---@class (exact) things.EventData.on_edges_changed
---@field public change "created"|"deleted"|"data_changed"|"status_changed" The type of change that occurred.
---@field public graph_name string The name of the graph whose edges changed.
---@field public nodes {[int]: true} Set of Thing ids whose edges were changed.
---@field public edges things.GraphEdge[] List of edges that were changed.

---Event raised when the virtual orientation of a Thing changes.
---@class (exact) things.EventData.on_orientation_changed
---@field public thing things.ThingSummary Summary of the Thing whose virtual orientation changed.
---@field public old_orientation? Core.Orientation The previous virtual orientation of the Thing.
---@field public new_orientation Core.Orientation The new virtual orientation of the Thing.

---Event raised when the composition of a Thing's children changes.
---@class (exact) things.EventData.on_children_changed
---@field public thing things.ThingSummary Summary of the Thing whose children changed.
---@field public added things.ThingSummary|nil If a child was added, its summary.
---@field public removed things.ThingSummary[]|nil Summary of the removed children.

---Event raised when a Thing's parent changes.
---@class (exact)things.EventData.on_parent_changed
---@field public thing things.ThingSummary Summary of the Thing whose parent changed.
---@field public old_parent_id int64? The id of the Thing's old parent, if it had one.

---Event raised when a Thing's child changes status.
---@class (exact) things.EventData.on_child_status
---@field public thing things.ThingSummary Summary of the Thing whose children's status changed.
---@field public child things.ThingSummary Summary of the child whose status changed.
---@field public old_status things.Status The previous status of the child.

---Event raised when a Thing's parent changes status.
---@class (exact) things.EventData.on_parent_status
---@field public thing things.ThingSummary Summary of the Thing whose parent's status changed.
---@field public parent things.ThingSummary Summary of the parent whose status changed.
---@field public old_status things.Status The previous status of the parent.
